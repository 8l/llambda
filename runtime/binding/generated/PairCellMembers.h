/************************************************************
 * This file is generated by typegen. Do not edit manually. *
 ************************************************************/

public:
	CellTypeId memberTypeId() const
	{
		return m_memberTypeId;
	}

	std::uint32_t listLength() const
	{
		return m_listLength;
	}

	DatumCell* car() const
	{
		return m_car;
	}

	DatumCell* cdr() const
	{
		return m_cdr;
	}

public:
	static bool typeIdIsTypeOrSubtype(CellTypeId typeId)
	{
		return typeId == CellTypeId::Pair;
	}

	static bool isInstance(const DatumCell *datum)
	{
		return typeIdIsTypeOrSubtype(datum->typeId());
	}

private:
	CellTypeId m_memberTypeId;
	std::uint32_t m_listLength;
	DatumCell* m_car;
	DatumCell* m_cdr;
