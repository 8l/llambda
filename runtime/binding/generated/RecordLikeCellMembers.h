/*****************************************************************
 * This file is generated by gen-types.py. Do not edit manually. *
 *****************************************************************/

public:
	std::uint32_t recordClassId() const
	{
		return m_recordClassId;
	}

	void* recordData() const
	{
		return m_recordData;
	}

public:
	static RecordLikeCell* fromDatum(DatumCell *datum)
	{
		if ((datum->typeId() == CellTypeId::Procedure) || (datum->typeId() == CellTypeId::Record))
		{
			return reinterpret_cast<RecordLikeCell*>(datum);
		}

		return nullptr;
	}

	static const RecordLikeCell* fromDatum(const DatumCell *datum)
	{
		if ((datum->typeId() == CellTypeId::Procedure) || (datum->typeId() == CellTypeId::Record))
		{
			return reinterpret_cast<const RecordLikeCell*>(datum);
		}

		return nullptr;
	}

	static bool isInstance(const DatumCell *datum)
	{
		return (datum->typeId() == CellTypeId::Procedure) || (datum->typeId() == CellTypeId::Record);
	}

private:
	std::uint32_t m_recordClassId;
	void* m_recordData;
