/*****************************************************************
 * This file is generated by gen-types.py. Do not edit manually. *
 *****************************************************************/

public:
	std::uint32_t length() const
	{
		return m_length;
	}

	std::uint8_t* data() const
	{
		return m_data;
	}

public:
	static BytevectorCell* fromDatum(DatumCell *datum)
	{
		if ((datum->typeId() == CellTypeId::Bytevector))
		{
			return reinterpret_cast<BytevectorCell*>(datum);
		}

		return nullptr;
	}

	static const BytevectorCell* fromDatum(const DatumCell *datum)
	{
		if ((datum->typeId() == CellTypeId::Bytevector))
		{
			return reinterpret_cast<const BytevectorCell*>(datum);
		}

		return nullptr;
	}

	static bool isInstance(const DatumCell *datum)
	{
		return (datum->typeId() == CellTypeId::Bytevector);
	}

private:
	std::uint32_t m_length;
	std::uint8_t* m_data;
