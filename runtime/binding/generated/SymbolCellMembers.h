/************************************************************
 * This file is generated by typegen. Do not edit manually. *
 ************************************************************/

public:
	std::uint32_t charLength() const
	{
		return m_charLength;
	}

	std::uint32_t byteLength() const
	{
		return m_byteLength;
	}

public:
	static bool isInstance(const DatumCell *datum)
	{
		return datum->typeId() == CellTypeId::Symbol;
	}

	static SymbolCell* fromDatum(DatumCell *datum)
	{
		if (isInstance(datum))
		{
			return static_cast<SymbolCell*>(datum);
		}

		return nullptr;
	}

	static const SymbolCell* fromDatum(const DatumCell *datum)
	{
		if (isInstance(datum))
		{
			return static_cast<const SymbolCell*>(datum);
		}

		return nullptr;
	}

private:
	std::uint32_t m_charLength;
	std::uint32_t m_byteLength;
