(define-library (llambda typed)
	(import (llambda primitives))
	(import (llambda nfi))
	
	; Re-export (define-type) from (llambda primitives) 
	(export define-type)

	(export <any> <list-element> <pair> <empty-list> <string> <symbol> <boolean> <integer> <flonum> <char> <vector> <bytevector> <procedure>)
	(begin 
		(define-type <any> <datum-cell>)
		(define-type <list-element> <list-element-cell>)
		(define-type <pair> <pair-cell>)
		(define-type <empty-list> <empty-list-cell>)
		(define-type <string> <string-cell>)
		(define-type <symbol> <symbol-cell>)
		(define-type <boolean> <bool>)
		(define-type <numeric> <numeric-cell>)
		(define-type <integer> <int64>)
		(define-type <flonum> <double>)
		(define-type <char> <unicode-char>)
		(define-type <vector> <vector-cell>)
		(define-type <bytevector> <bytevector-cell>)
		(define-type <procedure> <procedure-cell>)))
